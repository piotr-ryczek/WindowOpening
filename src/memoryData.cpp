#include <Arduino.h>
#include <memoryValue.h>
#include <pidController.h>
#include <memoryData.h>

// MemoryValues

// Pull Open Calibration Min
MemoryValue servoPullOpenCalibrationMinMemory(SERVO_PULL_OPEN_CALIBRATION_MIN_SET_ADDRESS, SERVO_PULL_OPEN_CALIBRATION_MIN_VALUE_ADDRESS);

// Pull Open Calibration  Max
MemoryValue servoPullOpenCalibrationMaxMemory(SERVO_PULL_OPEN_CALIBRATION_MAX_SET_ADDRESS, SERVO_PULL_OPEN_CALIBRATION_MAX_VALUE_ADDRESS);

// Pull Close Calibration Min
MemoryValue servoPullCloseCalibrationMinMemory(SERVO_PULL_CLOSE_CALIBRATION_MIN_SET_ADDRESS, SERVO_PULL_CLOSE_CALIBRATION_MIN_VALUE_ADDRESS);

// Pull Close Calibration Max
MemoryValue servoPullCloseCalibrationMaxMemory(SERVO_PULL_CLOSE_CALIBRATION_MAX_SET_ADDRESS, SERVO_PULL_CLOSE_CALIBRATION_MAX_VALUE_ADDRESS);

// Settings
MemoryValue optimalTemperatureMemory(OPTIMAL_TEMPERATURE_SET_ADDRESS, OPTIMAL_TEMPERATURE_VALUE_ADDRESS, PIDController::DEFAULT_OPTIMAL_TEMPERATURE);

MemoryValue pTermPositive(P_TERM_POSITIVE_SET_ADDRESS, P_TERM_POSITIVE_VALUE_ADDRESS, PIDController::DEFAULT_P_TERM_POSITIVE);

MemoryValue pTermNegative(P_TERM_NEGATIVE_SET_ADDRESS, P_TERM_NEGATIVE_VALUE_ADDRESS, PIDController::DEFAULT_P_TERM_NEGATIVE);

MemoryValue dTermPositive(D_TERM_POSITIVE_SET_ADDRESS, D_TERM_POSITIVE_VALUE_ADDRESS, PIDController::DEFAULT_D_TERM_POSITIVE);

MemoryValue dTermNegative(D_TERM_NEGATIVE_SET_ADDRESS, D_TERM_NEGATIVE_VALUE_ADDRESS, PIDController::DEFAULT_D_TERM_NEGATIVE);

MemoryValue oTermPositive(O_TERM_POSITIVE_SET_ADDRESS, O_TERM_POSITIVE_VALUE_ADDRESS, PIDController::DEFAULT_O_TERM_POSITIVE);

MemoryValue oTermNegative(O_TERM_NEGATIVE_SET_ADDRESS, O_TERM_NEGATIVE_VALUE_ADDRESS, PIDController::DEFAULT_O_TERM_NEGATIVE);

MemoryValue iTerm(I_TERM_SET_ADDRESS, I_TERM_VALUE_ADDRESS, PIDController::DEFAULT_I_TERM);

MemoryValue changeDiffThresholdMemory(CHANGE_DIFF_THRESHOLD_SET_ADDRESS, CHANGE_DIFF_THRESHOLD_VALUE_ADDRESS, PIDController::DEFAULT_CHANGE_DIFF_THRESHOLD);

MemoryValue windowOpeningCalculationIntervalMemory(WINDOW_OPENING_CALCULATION_INTERVAL_SET_ADDRESS, WINDOW_OPENING_CALCULATION_INTERVAL_VALUE_ADDRESS, 60 * 5); // Default: Every 5 minutes (stored in seconds, have to calculated to miliseconds in execution)

MemoryValue openingTermPositiveTemperatureIncrease(OPENING_TERM_POSITIVE_TEMPERATURE_INCREASE_SET_ADDRESS, OPENING_TERM_POSITIVE_TEMPERATURE_INCREASE_VALUE_ADDRESS, PIDController::DEFAULT_OPENING_TERM_POSITIVE_TEMPERATURE_INCREASE);
